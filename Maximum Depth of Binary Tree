/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(root==NULL)
        {
           return 0;
        }
       queue<TreeNode*> eleque;
       int length=0;
       eleque.push(root);
       while(true)
       {
        int nodecount=eleque.size();
        if(nodecount==0)
        {
            return length;
        }
        while(nodecount>0)
        {
            TreeNode* element=eleque.front();
            eleque.pop();
            if(element->left!=NULL)
            {
                eleque.push(element->left);
            }
            if(element->right!=NULL)
            {
                eleque.push(element->right);
            }
            nodecount--;
        }
        length++;
       }

     return 0;
    }
};
