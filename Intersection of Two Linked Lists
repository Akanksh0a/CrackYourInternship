/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA==null||headB==null)
        return null;
    int l1= length(headA);
    int l2 = length(headB);
        while(l1>l2)
        {
            l1--;
            headA=headA.next;
        }
         while(l2>l1)
        {
            l2--;
            headB=headB.next;
        }
        while(headA!=headB)
        {
            headA=headA.next;
            headB=headB.next;
        }
        return headA;
    }
    private int length(ListNode head)
    {
    
        int c=0;
        while(head!=null)
        {
            c++;
            head=head.next;
        }
        return c;
    }
}
