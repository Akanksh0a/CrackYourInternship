//{ Driver Code Starts
import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
    
	public static void main (String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine().trim());
		while(t-->0){
		    System.out.println(new Solution().evaluatePostFix(br.readLine().trim()));
		}
	}
}
// } Driver Code Ends


class Solution
{
    //Function to evaluate a postfix expression.
    public static int evaluatePostFix(String S)
    {
        Stack<Integer> st=new Stack<>();
        // Your code here
        char arr[]=S.toCharArray();
        for(char c:arr)
        {
            if(Character.isDigit(c))
            {
                st.push(c-'0');
            }
            else if(c=='+')
            {
                if(!st.isEmpty()&&st.size()>=2)
                {
                    int num1=st.pop();
                    int num2=st.pop();
                    int d=(num1+num2);
                    
                    st.push(d);
                }
            }
             else if(c=='-')
            {
                if(!st.isEmpty()&&st.size()>=2)
                {
                    int num1=st.pop();
                    int num2=st.pop();
                    int d=(num2-num1);
                    
                    st.push(d);
                }
            }
             else if(c=='*')
            {
                if(!st.isEmpty()&&st.size()>=2)
                {
                    int num1=st.pop();
                    int num2=st.pop();
                    int d=(num1*num2);
                    
                    st.push(d);
                }
            }
             else if(c=='/')
            {
                if(!st.isEmpty()&&st.size()>=2)
                {
                    int num1=st.pop();
                    int num2=st.pop();
                    int d=(num2/num1);
                    
                    st.push(d);
                }
            }
        }
        int ans=st.pop();
        return ans;
        
    }
}
